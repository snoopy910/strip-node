name: Strip Node CI/CD

on:
  push:
    branches:
      - main
      - stage
      - develop
  pull_request:
    branches:
      - develop
      - stage
      - main

env:
  AWS_REGION: us-east-1

jobs:
  build-and-test:
    runs-on: ubuntu-latest 
    steps:
      - uses: actions/checkout@v3
     
      - name: Update CA certificates
        run: sudo apt-get update && sudo apt-get install -y ca-certificates

      - name: Configure Git to skip SSL verification
        run: git config --global http.sslVerify false

      - name: Load Secrets
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
            echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
          else
            echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
            echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
          fi

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Load AWS Credentials for Environment
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
            echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
          else
            echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
            echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            REPOSITORY_PREFIX="prod"
          elif [[ "${{ github.ref }}" == "refs/heads/stage" ]]; then
            REPOSITORY_PREFIX="stage"
          else
            REPOSITORY_PREFIX="dev"
          fi
      
          COMPONENT_TYPE=backend
          COMPONENT_NAME=strip-node
      
          IMAGE_TAG_FORMAT="$ECR_REGISTRY/$REPOSITORY_PREFIX/$COMPONENT_TYPE/$COMPONENT_NAME"
      
          echo "Building Docker image with tag: $IMAGE_TAG_FORMAT:${{ env.IMAGE_TAG }}"
      
          docker build -t $IMAGE_TAG_FORMAT:${{ env.IMAGE_TAG }} -t $IMAGE_TAG_FORMAT:latest .
          docker push $IMAGE_TAG_FORMAT:${{ env.IMAGE_TAG }}
          docker push $IMAGE_TAG_FORMAT:latest
          